---

kind: List
apiVersion: v1
items:
- apiVersion: v1
  kind: Service
  metadata:
    labels:
      app: {{ application_name }}
      expose: "true"
    name: {{ application_name }}
  spec:
    ports:
      - name: http
        port: 8080
        protocol: TCP
        targetPort: 8080
    selector:
      group: dashbuilder 
      app: {{ application_name }}
    sessionAffinity: None
    type: ClusterIP
- apiVersion: apps.openshift.io/v1
  kind: DeploymentConfig
  metadata:
    labels:
      app: {{ application_name }}
    name: {{ application_name }}
  spec:
    replicas: 1
    revisionHistoryLimit: 2
    selector:
      group: dashbuilder
      app: {{ application_name }}
    strategy:
      activeDeadlineSeconds: 21600
      resources: {}
      rollingParams:
        intervalSeconds: 1
        maxSurge: 25%
        maxUnavailable: 25%
        timeoutSeconds: 3600
        updatePeriodSeconds: 1
      type: Rolling
    template:
      metadata:
        labels:
          group: dashbuilder
          app: {{ application_name }}
      spec:
        containers:
          - env:
            - name: JAVA_OPTIONS
              value: "-Dquarkus.http.host=0.0.0.0 -Dquarkus.http.port=8080 -Djava.util.logging.manager=org.jboss.logmanager.LogManager -Ddashbuilder.runtime.multi=true -Ddashbuilder.datasources=jbpmdb -Ddashbuilder.datasource.jbpmdb.jdbcUrl=jdbc:postgresql://{{ rhpam_psql_app_name }}:5432/{{ rhpam_psql_db_name }} -Ddashbuilder.datasource.jbpmdb.providerClassName=org.postgresql.Driver -Ddashbuilder.datasource.jbpmdb.maxSize=10 -Ddashbuilder.datasource.jbpmdb.principal={{ rhpam_psql_user_name }} -Ddashbuilder.datasource.jbpmdb.credential={{ rhpam_psql_passwd }} -Dquarkus.http.enable-compression=false -Ddashbuilder.import.base.dir=/opt/dashbuilder"
            imagePullPolicy: IfNotPresent
            name: {{ application_name }}
            livenessProbe:
              failureThreshold: 3
              exec:
                command:
                - "/bin/bash"
                - "-c"
                - "curl --fail --silent http://localhost:8080"
              initialDelaySeconds: 30
              periodSeconds: 60
              timeoutSeconds: 3
            readinessProbe:
              failureThreshold: 3
              exec:
                command:
                - "/bin/bash"
                - "-c"
                - "curl --fail --silent http://localhost:8080"
              initialDelaySeconds: 30
              periodSeconds: 60
              timeoutSeconds: 3
            resources:
              limits:
                cpu: '1000m'
                memory: '1Gi'
              requests:
                cpu: '250m'
                memory: '250Mi'
            securityContext:
              privileged: false
            terminationMessagePath: /dev/termination-log
            terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        serviceAccount: {{ application_name }}
        serviceAccountName: {{ application_name }}
        terminationGracePeriodSeconds: 30
    triggers:
      - type: ConfigChange
      - imageChangeParams:
          automatic: true
          containerNames:
            - {{ application_name }}
          from:
            kind: ImageStreamTag
            name: "{{ application_name }}:{{ image_tag }}"
        type: ImageChange

