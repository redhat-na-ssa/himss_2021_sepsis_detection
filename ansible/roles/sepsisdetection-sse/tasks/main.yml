---

########    Sepsis Detection SSE Service    #############

- name: create {{ service_account }} service account for {{ application_name }} application
  k8s:
    state: present
    name: "{{ service_account }}"
    definition:
      apiVersion: v1
      kind: ServiceAccount
      metadata:
        name: "{{ service_account }}"
        namespace: "{{ namespace }}"

- name: give cluster admin privileges to {{ service_account }} service account
  k8s:
    state: present
    name: "{{ service_account }}-admin"
    definition:
      apiVersion: rbac.authorization.k8s.io/v1
      kind: RoleBinding
      metadata:
        name: "{{ service_account }}-admin"
        namespace: "{{ namespace }}"
      roleRef:
        apiGroup: rbac.authorization.k8s.io
        kind: ClusterRole
        name: admin
      subjects:
      - kind: ServiceAccount
        name: "{{ service_account }}-admin"
        namespace: "{{ namespace }}"

- name: "copy application properties template"
  set_fact:
    aprops: "{{ lookup('template', 'templates/' + application_properties )  }}"

- name: create {{ application_configmap }} application configmap
  k8s:
    state: present
    name: "{{ application_configmap }}"
    namespace: "{{ namespace }}"
    definition:
      apiVersion: v1
      kind: ConfigMap
      metadata:
        name: "{{ application_configmap }}"
      data:
        application.properties: "{{ aprops }}"

- import_tasks: deploy_from_source.yml
  when: deploy_from is defined and deploy_from == "source"

- import_tasks: deploy_from_image.yml
  when: deploy_from is defined and deploy_from == "image"

- set_fact:
    route_hostname: "{{ application_name }}-{{ namespace }}.{{ ocp_domain_host.stdout }}"
- name: "deploy {{ application_name }} route {{ route_hostname }}"
  k8s:
    state: present
    kind: Deployment
    definition: "{{ lookup('template', 'templates/route.yml') | from_yaml }}"
    namespace: "{{ namespace }}"

###########################################################
