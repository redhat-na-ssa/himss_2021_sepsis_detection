---



- name: "deploy serverless operator in {{ namespace_serverless_operator }} namespace"
  import_role:
    name: ../roles/operator_olm
  vars:
    operator_name: serverless-operator
    packagemanifest: "{{ serverless_operator_packagemanifest }}"
    subscription_channel: "{{ serverless_operator_subscription_channel }}"
    subscription_namespace: "{{ namespace_serverless_operator }}"
    subscription_name: "{{ serverless_operator_subscription_name }}"
    automatic_installplan_approval: "{{ serverless_operator_subscription_automatic_installplan_approval }}"
    subscription_starting_csv: "{{ serverless_operator_subscription_starting_csv }}"
    csv_prefix: "{{ serverless_operator_csv_prefix }}"

- name: "wait until serverless operator is active in {{ namespace_serverless_operator }}"
  kubernetes.core.k8s_info:
    kind: Deployment
    name: "{{ namespace_serverless_operator }}"
    namespace: "{{ namespace }}"
    wait_sleep: 10
    wait_timeout: 90

- name: "deploy Knative Serving to {{ namespace_knativeserving }}"
  kubernetes.core.k8s:
    state: present
    kind: KnativeServing
    definition: "{{ lookup('template', 'templates/' + knative_serving_template) | from_yaml }}"
    namespace: "{{ namespace_knativeserving }}"

- name: "wait until KnativeServing {{ knative_serving_name }} has started in {{ namespace_knativeserving }}"
  shell: "{{ openshift_cli }} get KnativeServing {{ knative_serving_name }} -o jsonpath='{.status.conditions[?(@.type == \"Ready\")].status}'  -n {{ namespace_knativeserving }}"
  register: r_knativeserving
# - debug:
#     msg: "{{ r_knativeserving.stdout }}"
  retries: 10
  delay: 15
  until:
  - r_knativeserving.stdout | length > 0
  - r_knativeserving.stdout == 'True'

#####################################################################3
