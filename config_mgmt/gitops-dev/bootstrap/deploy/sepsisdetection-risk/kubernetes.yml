---
apiVersion: v1
kind: ServiceAccount
metadata:
  labels:
    app.kubernetes.io/name: sepsisdetection-risk
    app.kubernetes.io/managed-by: quarkus
  name: sepsisdetection-risk
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: sepsisdetection-risk-view
roleRef:
  kind: ClusterRole
  apiGroup: rbac.authorization.k8s.io
  name: view
subjects:
  - kind: ServiceAccount
    name: sepsisdetection-risk
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app.kubernetes.io/name: sepsisdetection-risk
    app.kubernetes.io/managed-by: quarkus
  name: sepsisdetection-risk
spec:
  ports:
    - name: http
      port: 8080
      protocol: TCP
      targetPort: 8080
    - name: https
      port: 443
      protocol: TCP
      targetPort: 8443
  selector:
    app.kubernetes.io/name: sepsisdetection-risk
  type: ClusterIP
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app.kubernetes.io/name: sepsisdetection-risk
    app.kubernetes.io/managed-by: quarkus
  name: sepsisdetection-risk
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: sepsisdetection-risk
  template:
    metadata:
      labels:
        app.kubernetes.io/name: sepsisdetection-risk
        app.kubernetes.io/managed-by: quarkus
    spec:
      containers:
        - env:
            - name: KUBERNETES_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
            - name: JAVA_OPTIONS
              value: -Dvertx.metrics.options.enabled=true -Dvertx.metrics.options.registryName=prometheus
          image: quay.io/redhat_naps_da/sepsisdetection-risk:0.0.7
          imagePullPolicy: Always
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /q/health/live
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 5
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 10
          name: sepsisdetection-risk
          ports:
            - containerPort: 8443
              name: https
              protocol: TCP
            - containerPort: 8080
              name: http
              protocol: TCP
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /q/health/ready
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 5
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 10
          resources:
            limits:
              cpu: 500m
              memory: 512Mi
            requests:
              cpu: 100m
              memory: 128Mi
          startupProbe:
            failureThreshold: 3
            httpGet:
              path: /q/health/started
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 5
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 10
          volumeMounts:
            - mountPath: /deployments/config
              name: config
              readOnly: false
      initContainers:
        - args:
            - pod
            - -lstrimzi.io/name=kafka-connect-connect
          image: groundnuty/k8s-wait-for:no-root-v1.7
          imagePullPolicy: IfNotPresent
          name: check-kafka
        - args:
            - pod
            - -lapp=fhir-server
          image: groundnuty/k8s-wait-for:no-root-v1.7
          imagePullPolicy: IfNotPresent
          name: check-fhir-server
      serviceAccountName: sepsisdetection-risk
      volumes:
        - configMap:
            defaultMode: 420
            items:
              - key: application.properties
                path: application.properties
            name: sepsisdetection-risk
            optional: false
          name: config
